#set(
    $gitHookConfiguration = {
        "branch": {
            "legend": "Branch",
            "description": "These events are triggered when user creates/deletes branch via Bitbucket web-interface.",
            "triggers": {
                "create": {
                    "label": "Create"
                },
                "delete": {
                    "label": "Delete"
                }
            }
        },
        "tag": {
            "legend": "Tag",
            "description": "These events are triggered when user creates/deletes tag via Bitbucket web-interface.",
            "triggers": {
                "create": {
                    "label": "Create"
                },
                "delete": {
                    "label": "Delete"
                }
            }
        },
        "file": {
            "legend": "File",
            "description": "This event is triggered when user edits a file via Bitbucket web-interface.",
            "triggers": {
                "edit": {
                    "label": "Edit"
                }
            }
        },
        "pr": {
            "legend": "Pull Request",
            "description": "Note, that this event is triggered every time user visits pull request details page.",
            "triggers": {
                "merge": {
                    "label": "Merge Check"
                }
            }
        },
        "repo": {
            "legend": "Repository",
            "description": "This event is triggered when changes are pushed to a repository via git push command.",
            "triggers": {
                "push": {
                    "label": "Push"
                }
            }
        },
        "internal": {
            "legend": "Internal",
            "description": "Invoked when merge(MergeCommandParameters) is called. Note that this is a low-level SCM operation and should not generally be intercepted.",
            "triggers": {
                "push": {
                    "label": "Merge Event"
                }
            }
        }
    }
)

#set(
    $triggerConfigurations = {
        "pre_receive": {
            "title": "Pre-receive Triggers",
            "groups": $gitHookConfiguration
        },

        "post_receive": {
            "title": "Post-receive Triggers",
            "groups": $gitHookConfiguration
        }
    }
)
<!DOCTYPE html>
<html>
    <head>
            <meta name="decorator" content="atl.admin">
    </head>
    <body>
        <h2>External Hooks Add-on Settings</h2>

        <form class="aui">
            #foreach($configuration in $triggerConfigurations.entrySet())
                <h3>$configuration.value.title</h3>

                #foreach($group in $configuration.value.groups.entrySet())
                <fieldset class="group">
                    <legend><span>$group.value.legend</span></legend>
                    #foreach($trigger in $group.value.triggers.entrySet())
                        #set(
                            $inputID = "rq_hooks_" +
                                $configuration.key + "_" +
                                $group.key + "_" +
                                $trigger.key
                        )
                        <div class="checkbox">
                            <input
                                class="checkbox"
                                type="checkbox"
                                name="triggers[$configuration.key][$group.key][$trigger.key]"
                                id="$inputID"
                                />
                            <label for="$inputID">$trigger.value.label</label>
                        </div>
                    #end
                    #if($group.value.description)
                    <div class="description">$group.value.description</div>
                    #end
                </fieldset>
                #end
            #end

            <button class="aui-button aui-button-primary" id="rq_hooks_settings_save">Save</button>
        </form>
    </body>
</html>
